/*
#########################################################################
##                                                                     ##
##     ig_clustering.config                                            ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/


//////// variables that will be used only in the main.nf

// variables exported to the main.nf environment. See https://www.nextflow.io/docs/latest/config.html#scope-env
env {
    sample_path = "/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/human_test" // path of the fasta files directory. The last / can be added or not, as it is removed by nextflow file(). Example : sample_path="/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/A1_IgG_H_fw.fasta" or sample_path="/pasteur/appa/homes/gmillot/dataset/20210707_AV07016_HAD-III-89_plate3_IgK_sanger_seq"
    igblast_database_path="germlines/imgt/human/vdj" // path of the database provided by igblast indicating a folder of fasta files, WITHOUT the last /. Example: igblast_database_path="germlines/imgt/human/vdj". WArning: change this code in the .nf file " MakeDb.py igblast -i \${FILE}_igblast.fmt7 -s ${fs} -r \${REPO_PATH}/imgt_human_IGHV.fasta \${REPO_PATH}/imgt_human_IGHD.fasta \${REPO_PATH}/imgt_human_IGHJ.fasta --extended" if the present path is modified
    igblast_organism="human" // value of the --organism option of AssignGenes.py igblast. Example: igblast_organism="human"
    igblast_loci="ig" // value of the --loci option of AssignGenes.py igblast. Example: igblast_loci="ig"
    igblast_files="imgt_human_IGKV.fasta imgt_human_IGKJ.fasta" // files of igblast_database_path parmater to use (-r option of MakeDb.py igblast). Example: igblast_files="imgt_human_IGHV.fasta imgt_human_IGHD.fasta imgt_human_IGHJ.fasta"
    igblast_aa="true" // either "true" or "false". Perform igblast protein (true) or nucleic (false) aligmnent
    clone_distance="0.15" // see https://shazam.readthedocs.io/en/stable/vignettes/DistToNearest-Vignette/
    //Warning: do not write the out_path now. See below. If written here, the one below is not considered"
}

//////// end variables that will be used only in the main.nf




//////// variables that will be used below (and potentially in the main.nf file)

//// must be also exported
system_exec = 'local' // the system that runs the workflow. Either 'local' or 'slurm'
out_path_ini = "$baseDir/results" // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/Gael/Desktop'. Another example : out_path="/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/results". Warning: this does not work: out_path="/mnt/share/Users/gael/Desktop"
//// end must be also exported

//// General variable
result_folder_name="Ig_clustering"
//// end General variable

//// slurm variables
// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
queue = 'common,dedicated' // -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=hubbioit'
add_options = ' ' // additional option of slurm. Example: addoptions = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options
//// end slurm variables

//////// end variables that will be used below



//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path_ini}/${result_folder_name}_${secs}"

//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/dag.dot"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur -B /run/shm:/run/shm'
    }else{
        runOptions = '--no-home -B /run/shm:/run/shm' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d acc√®s
    if(system_exec == 'slurm'){
        cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
    }else if(system_exec == 'slurm_local'){
        cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }else{
        cacheDir = '/mnt/c/Users/gmillot/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=30
        errorStrategy='retry'
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }

    withLabel: bash {
        container='gmillot/bash-extended_v4.0:gitlab_v8.0'
        cpus=1
        memory='3G'
    }

    withLabel: immcantation {
        container='gmillot/immcantation_v1.0:gitlab_v9.0'
        cpus=1
        memory='3G'
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_ig_clustering_v1.0:gitlab_v9.3'
        cpus=1 // only used when name = "local" in the executor part above
        memory='3G' // only used when name = "local" in the executor part above
    }

}

//////// end directives