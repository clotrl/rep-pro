/*
#########################################################################
##                                                                     ##
##     ig_clustering.config                                            ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/

/*
#########################################################################
##                                                                     ##
##     Parameters that must be set by the user                         ##
##                                                                     ##
#########################################################################
*/

/*
##########################
##                      ##
##     Ig Clustering    ##
##                      ##
##########################
*/

env {
    sample_path = "/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/VH" // single character string of the path of the fasta files directory. The last / can be added or not, as it is removed by nextflow file(). Example : sample_path="/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/A1_IgG_H_fw.fasta" or sample_path="/pasteur/appa/homes/gmillot/dataset/20210707_AV07016_HAD-III-89_plate3_IgK_sanger_seq". Example with spaces in the path: sample_path="/mnt/x/ROCURONIUM PROJECT/01 Primary data/04.Repertoire analysis/SORT1/SORT1 Seq-original/xlsx_to_fasta_1669018924/All/VL"
    igblast_database_path = "germlines/imgt/mouse/vdj" // single character string of the path of the database provided by igblast indicating a folder of fasta files, WITHOUT the last /. See \\wsl$\Ubuntu-20.04\home\gael\share for the different possibilities of paths. Example: igblast_database_path="germlines/imgt/human/vdj". Warning: change this code in the .nf file " MakeDb.py igblast -i \${FILE}_igblast.fmt7 -s ${fs} -r \${REPO_PATH}/imgt_human_IGHV.fasta \${REPO_PATH}/imgt_human_IGHD.fasta \${REPO_PATH}/imgt_human_IGHJ.fasta --extended" if the present path is modified
    igblast_organism = "mouse" // single character string of the value of the --organism option of AssignGenes.py igblast. Example: igblast_organism="human". Example: igblast_organism="mouse"
    igblast_loci = "ig" // single character string of the value of the --loci option of AssignGenes.py igblast. Example: igblast_loci="ig"
    igblast_files = "imgt_mouse_IGHV.fasta imgt_mouse_IGHD.fasta imgt_mouse_IGHJ.fasta" // single character string of the files of igblast_database_path parameter to use (-r option of MakeDb.py igblast). Each file msut be separated by a single space. Example: igblast_files="imgt_human_IGHV.fasta imgt_human_IGHD.fasta imgt_human_IGHJ.fasta". Example: igblast_files="imgt_human_IGKV.fasta imgt_human_IGKJ.fasta". Example: igblast_files="imgt_mouse_IGKV.fasta imgt_mouse_IGKJ.fasta"
    nb_seq_per_clone = "2" // single character string of a positive integer value. Minimun number of sequences per clonal group for tree plotting. Example: nb_seq_per_clone = "5"
    clone_distance = "0.15" // single character string of a positive decimal value, setting the distance threhold that defines the appartenance of 2 sequences to a same clonal group or not. See https://shazam.readthedocs.io/en/stable/vignettes/DistToNearest-Vignette/. Example: clone_distance = "0.15"
}

/*
########################
##                    ##
##     Graphics       ##
##                    ##
########################
*/

env {
    tree_meta_path = "/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/metadata.tsv" // single character string of a valid path of a metadata file for adding additional info to the trees. Write "NULL" if no metadata to add. WARNING: the metadata .tsv table must include a first column named "label" containing sequence names, i.e., the header of some of the fasta files from sample_path, without the ">" of the header. Additionnal columns (quanti or quali) can then be added after the fisrt column to modify the leafs of the tree. For instance: "KD", or Antibody name. Example: tree_meta_path = "/mnt/c/Users/Gael/Documents/Git_projects/ig_clustering/dataset/metadata.tsv". Example: tree_meta_path = "NULL"
    tree_meta_name_replacement = "Name" // single character string of the name of the columns of the table indicated in the tree_meta_path parameter. This column will be used to replace the sequence names (header of the fasta files) by more appropriate names. Write "NULL" if not required and if tree_meta_path is not "NULL". Ignored if tree_meta_path = "NULL". Ignored if tree_meta_path = "NULL". Example: tree_meta_name_replacement = "KD". Of note, tree_leaf_size parameter is ignored if tree_meta_name_replacement is a numeric column ,and tree_leaf_shape is ignored if the column is another mode
    tree_meta_legend = "KD" // single character string of the name of the columns of the table indicated in the tree_meta_path parameter. This column will be used to add a legend in trees, in order to visualize an additionnal parameter like KD, names, etc. Ignored if tree_meta_path = "NULL". Example: tree_meta_legend = "KD". Of note, tree_leaf_size parameter is ignored if tree_meta_legend is a numeric column ,and tree_leaf_shape is ignored if the column is another mode
    tree_kind = "rectangular" // single character string of the kind of tree. Can be "rectangular", "roundrect", "slanted", "ellipse", "circular", "fan", "equal_angle", "daylight". See https://yulab-smu.top/treedata-book/chapter4.html#tree-layouts
    tree_duplicate_seq = "FALSE" // single character string indicating if identical sequences (with difference cell or sequence names) must be removed from trees or not. Either "TRUE" for keeping or "FALSE" for removing
    tree_leaf_color = "NULL" // single character string of the color of leaf tip. Ignored if tree_meta_legend parameter is a name of a non numeric column of the tree_meta_path parameter
    tree_leaf_shape = "23" // single character string of the shape of leaf tip. See http://127.0.0.1:25059/library/graphics/html/points.html
    tree_leaf_size = "3" // single character string of the size of leafs (positive number). Ignored if tree_meta_legend parameter is a name of a numeric column of the tree_meta_path parameter
    tree_label_size = "2" // single character string of the size of leaf labeling (positive number)
    tree_label_hjust = "-0.5" // single character string of the adjustment of leaf labeling
    tree_label_rigth = "FALSE" // single character string of the position of the labeling. Either "TRUE" or "FALSE". Only works for tree_kind = "rectangular" and users need to use theme() to adjust tip labels in this case
    tree_label_outside = "TRUE" // single character string of the display of the labeling outside of the plot region (if labels are truncated). Either "TRUE" or "FALSE"
    tree_right_margin = "1.5" // single character string positive numeric value for the right margin in inches, considering 5 inches the width of the graphic device
    tree_legend = "TRUE" // single character string of the display of the legend. Either "TRUE" or "FALSE"
    donut_hole_size = "1" // single character string of the size of the donut hole (positive number)
    donut_colors = "NULL" // single character string of the color palette of the donut. Write "NULL" for default. Example: donut_colors = "Accent". See https://ggplot2.tidyverse.org/reference/scale_brewer.html#palettes
    donut_limit_legend = "0.1" // single character string of the classes displayed in the legend for which the corresponding proportion is over the mentionned proportion threshold (positive proportion). Write "NULL" if not required
}

/*
############################
##                        ##
##     Local / Cluster    ##
##                        ##
############################
*/

// see https://confluence.pasteur.fr/pages/viewpage.action?pageId=69304504
system_exec = 'local' // single character string of the system that runs the workflow. Either 'local' to run on our own computer or 'slurm' to run on the pasteur cluster. Example: system_exec = 'local'
queue = 'common,dedicated' // single character string of the -p option of slurm. Example: queue = 'common,dedicated'. Example: queue = 'hubbioit'
qos = '--qos=ultrafast' // single character string of the --qos option of slurm. Example: qos= '--qos=fast'. Example: qos = '--qos=ultrafast'. Example: qos = '--qos=hubbioit'
add_options = ' ' // single character string of the additional option of slurm. Example: add_options = '--exclude=maestro-1101,maestro-1034' or add_options = ' ', add_options = '--time=70:00:00' (acceptable time formats include "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"). See https://slurm.schedmd.com/sbatch.html#OPT_time for other options

/*
#############################
##                         ##
##     Other (optional)    ##
##                         ##
#############################
*/

env{
    cute_path = "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/-/raw/v11.8.0/cute_little_R_functions.R" // single character string indicating the file (and absolute pathway) of the required cute_little_R_functions toolbox. With ethernet connection available, this can also be used: "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/raw/v5.1.0/cute_little_R_functions.R" or local "C:\\Users\\Gael\\Documents\\Git_projects\\cute_little_R_functions\\cute_little_R_functions.R"
}

singularity_path = "NULL" // single character string of the path of the singularity folder (where all the singularity images are are pulled and stored for proper nextflow execution). Write "NULL" for default path (but will not work in most cases). Example: singularity_path='/pasteur/zeus/projets/p01/BioIT/gmillot/singularity'. Example: singularity_path='/mnt/c/Users/gmillot/singularity'. Example: singularity_path="$baseDir/singularity" # do not forget double quotes
out_path_ini = "$baseDir/results" // single character string of where the output files will be saved. Example out_path_ini = '.' for where the main.nf run is executed or out_path_ini = "$baseDir/results" to put the results in a result folder (created if required), $baseDir indicating where the main.nf run is executed. Example: out_path_ini = '/mnt/c/Users/Gael/Desktop'. Example : out_path_ini="/pasteur/zeus/projets/p01/BioIT/gmillot/08002_bourgeron/results". Warning: this does not work: out_path_ini = "/mnt/share/Users/gael/Desktop"
result_folder_name="Ig_clustering" // single character string.of the name of the folder where the results files are dorpped


/*
#########################################################################
##                                                                     ##
##     End Parameters that must be set by the user                     ##
##                                                                     ##
#########################################################################
*/








//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path_ini}/${result_folder_name}_${secs}"

//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path_ini = "${out_path_ini}"
    out_path = "${out_path}"
    queue = "${queue}"
    qos = "${qos}"
    add_options = "${add_options}"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/nf_dag.png"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur' //-B /run/shm:/run/shm has been removed because block the pipeline. Warning: clone_assignment process use python. Thus, -B /run/shm:/run/shm should be required normally
    }else{
        runOptions = '--no-home -B /run/shm:/run/shm' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d accès
    if(singularity_path == "NULL"){
        if(system_exec == 'slurm'){
            cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
        }else if(system_exec == 'slurm_local'){
            cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
        }else{
            cacheDir = '/mnt/c/Users/gmillot/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
        }
    }else{
        cacheDir = "${singularity_path}"
    }
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$queue"
        clusterOptions = "$qos $add_options"
        scratch=false
        maxRetries=30
        errorStrategy='retry'
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }

    withLabel: bash {
        container='gmillot/bash-extended_v4.0:gitlab_v8.0'
        cpus=1
        memory='500M'
    }

    withLabel: immcantation {
        container='gmillot/immcantation_v1.0:gitlab_v9.0'
        cpus=1
        memory='3G'
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_ig_clustering_v1.2:gitlab_v9.8'
        cpus=1 // only used when name = "local" in the executor part above
        memory='3G' // only used when name = "local" in the executor part above
    }

}

//////// end directives